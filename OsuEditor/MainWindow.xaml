<ctrls:MetroWindow x:Class="OsuEditor.MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:ctrls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                   xmlns:mdi="clr-namespace:WPF.MDI;assembly=WPF.MDI"
                   xmlns:custom="clr-namespace:OsuEditor.Controls"
                   xmlns:sys="clr-namespace:System;assembly=mscorlib"
                   mc:Ignorable="d"
                   Title="Osu! Editor" Height="798" Width="1360" TitleCharacterCasing="Normal"
                   Loaded="MainWindow_OnLoaded" ResizeMode="NoResize">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="105"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Top">
            <Grid x:Name="HeaderGrid"
                  Width="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type StackPanel}},Path=ActualWidth}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="339.5"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Vertical">
                        <Button ToolTip="Increase Timeline Zoom" HorizontalAlignment="Center" Height="30"
                                    Width="30" Margin="0,20,0,0" Style="{DynamicResource MetroCircleButtonStyle}"
                                    Click="ZoomIn_OnClick">
                            <Rectangle Width="11" Height="11" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_add}"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button ToolTip="Decrease Timeline Zoom" HorizontalAlignment="Center" Height="30"
                                    Width="30" Margin="0,5,0,0" Style="{DynamicResource MetroCircleButtonStyle}"
                                    Click="ZoomOut_OnClick">
                            <Rectangle Width="11" Height="11" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_minus}"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </StackPanel>
                    <custom:Timeline Grid.Column="1" x:Name="HeaderTimeline" HorizontalAlignment="Left"
                                                Zoom="10.0" CurrentValue="0"/>
                </Grid>
                <StackPanel Grid.Column="1" Orientation="Vertical">
                    <Label Content="Beat Snap Divisor :" FontSize="25"/>
                    <StackPanel Orientation="Horizontal" Margin="0,15,0,0" Height="30">
                        <Slider Width="280" Height="30" Margin="0,-5,0,0" IsTabStop="False" Minimum="0" Maximum="16" Style="{StaticResource BeatDivisorSlider}"
                                Value="{Binding CurrentMap.Edit.BeatDivisor, Converter={StaticResource BeatSnapToSliderConverter}}"
                                IsSnapToTickEnabled="True" Ticks="0, 2, 3, 4, 6, 8, 12, 16">
                            <Slider.LayoutTransform>
                                <ScaleTransform ScaleY="1.6" CenterX="15" CenterY="15"/>
                            </Slider.LayoutTransform>
                        </Slider>
                        <Label x:Name="BeatLabel" Content="{Binding CurrentMap.Edit.BeatDivisor, Converter={StaticResource SnapTextConverter}}" Margin="5,-8,0,0" FontSize="20"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <mdi:MdiContainer Grid.Column="1" x:Name="PatternMdi" Theme="Luna" Background="Transparent"/>
            <ScrollViewer Grid.Column="2">
                <StackPanel Orientation="Vertical">
                    <Expander Header="Metadata" VerticalAlignment="Top" Margin="0,20,5,0">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Artist" Width="70"/>
                                <TextBox Width="125" Text="{Binding CurrentMap.Meta.ArtistUnicode, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="> Romanized" FontSize="9" Width="70"/>
                                <TextBox Width="125" Text="{Binding CurrentMap.Meta.Artist, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Title" Width="70"/>
                                <TextBox Width="125" Text="{Binding CurrentMap.Meta.TitleUnicode, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="> Romanized" FontSize="9" Width="70"/>
                                <TextBox Width="125" Text="{Binding CurrentMap.Meta.Title, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Creator" Width="70"/>
                                <TextBox Width="125" Text="{Binding CurrentMap.Meta.Creator, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Source" Width="70"/>
                                <TextBox Width="125" Text="{Binding CurrentMap.Meta.Source, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Tag" Width="70"/>
                                <TextBox Width="125" Text="{Binding CurrentMap.Meta.Tags, Converter={StaticResource ListToStringConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <Expander Header="Countdown" Margin="5" ctrls:ControlsHelper.ContentCharacterCasing="Normal">
                                <StackPanel Orientation="Vertical">
                                    <CheckBox Content="Enable countdown" Margin="0,0,0,5"/>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                        <Label Content="Speed:" Margin="0,-5,5,0"/>
                                        <StackPanel Orientation="Vertical">
                                            <RadioButton GroupName="CountdownSpeedGroup" Content="Half" Focusable="False" BorderThickness="1" Margin="0,0,0,5"/>
                                            <RadioButton GroupName="CountdownSpeedGroup" Content="Normal" Focusable="False" BorderThickness="1" Margin="0,0,0,5"/>
                                            <RadioButton GroupName="CountdownSpeedGroup" Content="Double" Focusable="False" BorderThickness="1"/>
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Offset:" Margin="0,0,5,0"/>
                                        <ctrls:NumericUpDown BorderThickness="1" Interval="1" Minimum="0" Maximum="5" InterceptManualEnter="False"/>
                                    </StackPanel>
                                </StackPanel>
                            </Expander>
                            <Expander Header="Misc. Toggles" Margin="5" ctrls:ControlsHelper.ContentCharacterCasing="Normal">
                                <StackPanel Orientation="Vertical">
                                    <CheckBox Content="Widescreen Support" BorderThickness="1" Focusable="False" Margin="0,0,0,5" IsChecked="{Binding CurrentMap.Gen.WidescreenStoryboard, UpdateSourceTrigger=PropertyChanged}"/>
                                    <CheckBox Content="SB over combo fire" ToolTip="Display storyboard in front of combo fire" BorderThickness="1" Focusable="False" Margin="0,0,0,5"/>
                                    <CheckBox Content="Epilepsy warning" ToolTip="Display epilepsy warning(storyboard has quick strobing)" BorderThickness="1" Focusable="False" Margin="0,0,0,5"/>
                                    <CheckBox Content="Letterbox during breaks" BorderThickness="1" Focusable="False" IsChecked="{Binding CurrentMap.Gen.LetterboxInBreaks, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                            </Expander>
                        </StackPanel>
                    </Expander>
                    <Expander Header="Properties" VerticalAlignment="Top" Margin="0,20,5,0">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Diff Name" Width="70"/>
                                <TextBox Width="125" Text="{Binding CurrentMap.Meta.Version, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="HP" Width="30"/>
                                <Slider Width="125" Margin="5,5,0,0" Minimum="0.0" Maximum="10.0" TickFrequency="0.1" TickPlacement="None" IsSnapToTickEnabled="True"
                                        Value="{Binding CurrentMap.Diff.HPDrainRate}"/>
                                <TextBox Width="30" Margin="5,0,0,0" PreviewTextInput="DoubleTextBox_OnPreviewTextInput">
                                    <TextBox.Text>
                                        <Binding Path="CurrentMap.Diff.HPDrainRate" Converter="{StaticResource DoubleToStringConverter}">
                                            <Binding.ConverterParameter>
                                                <x:Array Type="sys:Double">
                                                    <sys:Double>0.0</sys:Double>
                                                    <sys:Double>10.0</sys:Double>
                                                </x:Array>
                                            </Binding.ConverterParameter>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" 
                                        Visibility="{Binding CurrentMap.Gen.Mode, Converter={StaticResource PlayModeToVisibilityConverter}, ConverterParameter=4, IsAsync=True}">
                                <Label Content="CS" Width="30"/>
                                <Slider Width="125" Margin="5,5,0,0" Minimum="2.0" Maximum="7.0" TickFrequency="0.1" TickPlacement="None" IsSnapToTickEnabled="True"
                                        Value="{Binding CurrentMap.Diff.CircleSize}"/>
                                <TextBox Width="30" Margin="5,0,0,0" PreviewTextInput="DoubleTextBox_OnPreviewTextInput">
                                    <TextBox.Text>
                                        <Binding Path="CurrentMap.Diff.CircleSize" Converter="{StaticResource DoubleToStringConverter}">
                                            <Binding.ConverterParameter>
                                                <x:Array Type="sys:Double">
                                                    <sys:Double>2.0</sys:Double>
                                                    <sys:Double>7.0</sys:Double>
                                                </x:Array>
                                            </Binding.ConverterParameter>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="OD" Width="30"/>
                                <Slider Width="125" Margin="5,5,0,0" Minimum="0.0" Maximum="10.0" TickFrequency="0.1" TickPlacement="None" IsSnapToTickEnabled="True"
                                        Value="{Binding CurrentMap.Diff.OverallDifficulty}"/>
                                <TextBox Width="30" Margin="5,0,0,0" PreviewTextInput="DoubleTextBox_OnPreviewTextInput">
                                    <TextBox.Text>
                                        <Binding Path="CurrentMap.Diff.OverallDifficulty" Converter="{StaticResource DoubleToStringConverter}">
                                            <Binding.ConverterParameter>
                                                <x:Array Type="sys:Double">
                                                    <sys:Double>0.0</sys:Double>
                                                    <sys:Double>10.0</sys:Double>
                                                </x:Array>
                                            </Binding.ConverterParameter>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" 
                                        Visibility="{Binding CurrentMap.Gen.Mode, Converter={StaticResource PlayModeToVisibilityConverter}, ConverterParameter=4, IsAsync=True}">
                                <Label Content="AR" Width="30"/>
                                <Slider Width="125" Margin="5,5,0,0" Minimum="0.0" Maximum="10.0" TickFrequency="0.1" TickPlacement="None" IsSnapToTickEnabled="True"
                                        Value="{Binding CurrentMap.Diff.ApproachRate}"/>
                                <TextBox Width="30" Margin="5,0,0,0" PreviewTextInput="DoubleTextBox_OnPreviewTextInput">
                                    <TextBox.Text>
                                        <Binding Path="CurrentMap.Diff.ApproachRate" Converter="{StaticResource DoubleToStringConverter}">
                                            <Binding.ConverterParameter>
                                                <x:Array Type="sys:Double">
                                                    <sys:Double>0.0</sys:Double>
                                                    <sys:Double>10.0</sys:Double>
                                                </x:Array>
                                            </Binding.ConverterParameter>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </StackPanel>
                            <Expander Header="Audio" Margin="5" ctrls:ControlsHelper.ContentCharacterCasing="Normal">
                                <StackPanel Orientation="Vertical">
                                    <GroupBox Header="Default sample set" Style="{x:Null}" BorderThickness="1">
                                        <ListBox>
                                            <ListBoxItem Content="Normal"/>
                                            <ListBoxItem Content="Soft"/>
                                            <ListBoxItem Content="Drum"/>
                                        </ListBox>
                                    </GroupBox>
                                    <CheckBox Content="Enable custom overrides" BorderThickness="1" Focusable="False" Margin="0,5,0,0"/>
                                    <Label Content="Sample volume:" Margin="0,5,0,0"/>
                                    <StackPanel Orientation="Horizontal">
                                        <Slider Width="140" Margin="0,5,0,0"/>
                                        <TextBox Width="30" Margin="5,0,0,0"/>
                                    </StackPanel>
                                </StackPanel>
                            </Expander>
                            <Expander Header="Colors" Margin="5" ctrls:ControlsHelper.ContentCharacterCasing="Normal"
                                      Visibility="{Binding CurrentMap.Gen.Mode, Converter={StaticResource PlayModeToVisibilityConverter}, ConverterParameter=0, IsAsync=True}">
                                <StackPanel Orientation="Vertical">
                                    <CheckBox Content="Enable custom colors" BorderThickness="1" Focusable="False"/>
                                    <ListBox Margin="0,5,0,0">
                                        <ListBoxItem Content="Combo1" HorizontalContentAlignment="Center" Background="Green"/>
                                        <ListBoxItem Content="Combo2" HorizontalContentAlignment="Center" Background="Blue"/>
                                        <ListBoxItem Content="Combo3" HorizontalContentAlignment="Center" Background="Red"/>
                                        <ListBoxItem Content="Combo4" HorizontalContentAlignment="Center" Background="Orange"/>
                                    </ListBox>
                                    <Button Content="Background Color" Focusable="False" BorderThickness="0" HorizontalContentAlignment="Center" Background="Gray"
                                            ctrls:ControlsHelper.CornerRadius="0"/>
                                </StackPanel>
                            </Expander>
                            <StackPanel Orientation="Horizontal" 
                                        Visibility="{Binding CurrentMap.Gen.Mode, Converter={StaticResource PlayModeToVisibilityConverter}, ConverterParameter=0, IsAsync=True}">
                                <Label Content="Stack Leniency"/>
                                <Slider Width="100" Margin="5,5,0,0"/>
                            </StackPanel>
                        </StackPanel>
                    </Expander>
                    <Expander Header="Other Difficulties" Margin="0,20,5,0" VerticalAlignment="Top">
                        <ListBox>
                            <ListBoxItem>Normal</ListBoxItem>
                            <ListBoxItem>Hard</ListBoxItem>
                            <ListBoxItem>MX</ListBoxItem>
                            <ListBoxItem>SC</ListBoxItem>
                        </ListBox>
                    </Expander>
                    <Button Content="        Initial Settings" Margin="0,20,5,0" HorizontalContentAlignment="Left" Background="SlateGray"
                            ctrls:ControlsHelper.CornerRadius="0" Focusable="False" BorderThickness="0" Command="{Binding InitialCommand}"/>
                    <Button Content="        Editor Settings" Margin="0,20,5,0" HorizontalContentAlignment="Left" Background="SlateGray"
                            ctrls:ControlsHelper.CornerRadius="0" Focusable="False" BorderThickness="0" Command="{Binding EditorCommand}"/>
                </StackPanel>
            </ScrollViewer>
        </Grid>
        <StackPanel Grid.Row="2" Height="30" Orientation="Horizontal">
            <Label Width="80" Content="{Binding CurrentPosition, Converter={StaticResource MillisecondsConverter}}"
                   FontSize="16" HorizontalContentAlignment="Center" Margin="5,0,0,0"/>
            <custom:MusicBar Height="30" Width="848" Margin="10,6,10,0" HorizontalAlignment="Left" IsTabStop="False" IsMoveToPointEnabled="True"
                             Minimum="0" Maximum="{Binding SongLength}" Value="{Binding CurrentPosition}" Style="{StaticResource MusicBarSlider}"/>
            <Button Width="30" Margin="0" Padding="0" IsTabStop="False" Focusable="False" BorderThickness="0" ctrls:ControlsHelper.CornerRadius="0"
                    Command="{Binding PlayCommand}">
                <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_control_play}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Width="30" Margin="0" Padding="0" IsTabStop="False" Focusable="False" BorderThickness="0" ctrls:ControlsHelper.CornerRadius="0"
                    Command="{Binding PauseCommand}">
                <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_control_pause}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Width="30" Margin="0" Padding="0" IsTabStop="False" Focusable="False" BorderThickness="0" ctrls:ControlsHelper.CornerRadius="0"
                    Command="{Binding StopCommand}">
                <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_control_stop}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Margin="0" Padding="0" IsTabStop="False" Focusable="False" BorderThickness="0" ctrls:ControlsHelper.CornerRadius="0"
                    Command="{Binding TestCommand}">
                <StackPanel Margin="5,0,0,0" Orientation="Horizontal" Width="60">
                    <Rectangle Width="15" Height="15" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_control_play}"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="5,0,0,0" Text="Test" FontSize="15"></TextBlock>
                </StackPanel>
            </Button>
            <Label Margin="5,0,0,0" Content="Playback Rate:" FontSize="15" FontWeight="Bold"/>
            <ctrls:NumericUpDown x:Name="PlayRateUpDown" BorderThickness="0" Margin="7,0,0,0" Width="120" Height="30" FontSize="15" FontWeight="Bold" UpDownButtonsWidth="30"
                                 NumericInputMode="Numbers" InterceptArrowKeys="False" InterceptMouseWheel="False" InterceptManualEnter="False"
                                 Value="{Binding PlayRate, UpdateSourceTrigger=PropertyChanged}" Minimum="5" Maximum="150" Interval="5" StringFormat="{}{0:N0} %  "/>
        </StackPanel>
    </Grid>
</ctrls:MetroWindow>
